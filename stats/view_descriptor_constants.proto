// Copyright 2016, Google Inc.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//     http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.instrumentation;

import "census.proto";

option java_package = "com.google.instrumentation.stats.proto";
option java_outer_classname = "ViewDescriptorConstantsProto";

// Constants for defining a specific set of view descriptors.
// This data structure is used to convert pre-defined constants from/to
// text-format proto files.
// - To generate a binary proto file (*.pb) from a text-format proto file
//   (*.textpb), use:
//     BASE="filename"  (for example, BASE="rpc_constants")
//     cat $BASE.textpb | \
//     protoc --encode=google.instrumentation.ViewDescriptorConstants \
//     view_descriptor_constants.proto > $BASE.pb
// - To convert a binary proto file back to a text-format proto file, use:
//     BASE="filename"  (for example, BASE="rpc_constants")
//     cat $BASE.pb | \
//     protoc --decode=google.instrumentation.ViewDescriptorConstants \
//     view_descriptor_constants.proto > $BASE.textpb
message ViewDescriptorConstants {
  // A set of defined MeasurementDescriptors to be used for the ViewDescriptor.
  repeated MeasurementDescriptor measurement_descriptor = 1;

  // A set of defined ViewDescriptors to generate specific (pre-defined) views.
  repeated ViewDescriptor view_descriptor = 2;
}