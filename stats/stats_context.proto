// Copyright 2016-17, OpenCensus Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.instrumentation;

option java_package = "com.google.instrumentation.stats.proto";
option java_outer_classname = "StatsContextProto";

// StatsContext describes the encoding of stats context information (tags)
// for passing across RPC's.
message StatsContext {
  // Tags are encoded as a single byte sequence. The format is:
  // [tag_metadata key_len key_bytes value_len value_bytes]*
  //
  // Where:
  //  * tag_metadata is one byte and is for encoding metadata about the tag. The
  //    low 2 bits of this byte are used to encode the type of the value bytes.
  //    The high 6 bits are reserved for future use. The value_bytes type is
  //    encoded as:
  //    00 (value 0): string (UTF-8) encoding
  //    01 (value 1): integer (varint int64 encoding). See
  //      https://developers.google.com/protocol-buffers/docs/encoding#varints
  //      for documentation on the varint format.
  //    10 (value 2): boolean format. In this case value_len should equal 1, and
  //       the value_bytes will be a single byte containing either 0 (false) or
  //       1 (true).
  //    11 (value 3): Reserved for future use.
  //  * The key_len and value_len fields are represented using a varint, with a
  //    maximum value of 16383 bytes (this value is guaranteed to fit in at most
  //    2 bytes). Zero length keys or values are not allowed.
  //  * The value in key_bytes is a US-ASCII format string. Only the characters
  //    from 0x20 (' ') to 0x7e ('~') are valid.
  bytes tags = 1;
}

